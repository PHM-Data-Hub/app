{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jiwoo\\\\Desktop\\\\uw classes\\\\winter 21\\\\capstone\\\\Working Version\\\\pages\\\\_document.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport Document, { Html, Head, Main, NextScript } from \"next/document\";\nimport { ServerStyleSheets } from \"@material-ui/core/styles\";\nimport createEmotionServer from \"@emotion/server/create-instance\";\nimport theme from \"../components/theme\";\nimport { cache } from \"./_app.js\";\nconst {\n  extractCritical\n} = createEmotionServer(cache);\nexport default class MyDocument extends Document {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Html, {\n      lang: \"en\",\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n          name: \"theme-color\",\n          content: theme.palette.primary.main\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n          rel: \"stylesheet\",\n          href: \"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n        children: [/*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NextScript, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n\n} // `getInitialProps` belongs to `_document` (instead of `_app`),\n// it's compatible with static-site generation (SSG).\n\nMyDocument.getInitialProps = async ctx => {\n  // Resolution order\n  //\n  // On the server:\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. document.getInitialProps\n  // 4. app.render\n  // 5. page.render\n  // 6. document.render\n  //\n  // On the server with error:\n  // 1. document.getInitialProps\n  // 2. app.render\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the client\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. app.render\n  // 4. page.render\n  // Render app and page and get the context of the page with collected side effects.\n  const sheets = new ServerStyleSheets();\n  const originalRenderPage = ctx.renderPage;\n\n  ctx.renderPage = () => originalRenderPage({\n    enhanceApp: App => props => sheets.collect( /*#__PURE__*/_jsxDEV(App, _objectSpread({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 54\n    }, this))\n  });\n\n  const initialProps = await Document.getInitialProps(ctx);\n  const styles = extractCritical(initialProps.html);\n  return _objectSpread(_objectSpread({}, initialProps), {}, {\n    // Styles fragment is rendered after the app and page rendering finish.\n    styles: [...React.Children.toArray(initialProps.styles), sheets.getStyleElement(), /*#__PURE__*/_jsxDEV(\"style\", {\n      \"data-emotion-css\": styles.ids.join(\" \") // eslint-disable-next-line react/no-danger\n      ,\n      dangerouslySetInnerHTML: {\n        __html: styles.css\n      }\n    }, \"emotion-style-tag\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  });\n};","map":{"version":3,"sources":["C:/Users/Jiwoo/Desktop/uw classes/winter 21/capstone/Working Version/pages/_document.js"],"names":["React","Document","Html","Head","Main","NextScript","ServerStyleSheets","createEmotionServer","theme","cache","extractCritical","MyDocument","render","palette","primary","main","getInitialProps","ctx","sheets","originalRenderPage","renderPage","enhanceApp","App","props","collect","initialProps","styles","html","Children","toArray","getStyleElement","ids","join","__html","css"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,UAArC,QAAuD,eAAvD;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,OAAOC,mBAAP,MAAgC,iCAAhC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,KAAT,QAAsB,WAAtB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAsBH,mBAAmB,CAACE,KAAD,CAA/C;AAEA,eAAe,MAAME,UAAN,SAAyBV,QAAzB,CAAkC;AAC/CW,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,IAAX;AAAA,8BACE,QAAC,IAAD;AAAA,gCAEE;AAAM,UAAA,IAAI,EAAC,aAAX;AAAyB,UAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAcC,OAAd,CAAsBC;AAAxD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AACE,UAAA,GAAG,EAAC,YADN;AAEE,UAAA,IAAI,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA,gCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AAlB8C,C,CAqBjD;AACA;;AACAJ,UAAU,CAACK,eAAX,GAA6B,MAAOC,GAAP,IAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,QAAMC,MAAM,GAAG,IAAIZ,iBAAJ,EAAf;AACA,QAAMa,kBAAkB,GAAGF,GAAG,CAACG,UAA/B;;AAEAH,EAAAA,GAAG,CAACG,UAAJ,GAAiB,MACfD,kBAAkB,CAAC;AACjBE,IAAAA,UAAU,EAAGC,GAAD,IAAUC,KAAD,IAAWL,MAAM,CAACM,OAAP,eAAe,QAAC,GAAD,oBAASD,KAAT;AAAA;AAAA;AAAA;AAAA,YAAf;AADf,GAAD,CADpB;;AAKA,QAAME,YAAY,GAAG,MAAMxB,QAAQ,CAACe,eAAT,CAAyBC,GAAzB,CAA3B;AACA,QAAMS,MAAM,GAAGhB,eAAe,CAACe,YAAY,CAACE,IAAd,CAA9B;AAEA,yCACKF,YADL;AAEE;AACAC,IAAAA,MAAM,EAAE,CACN,GAAG1B,KAAK,CAAC4B,QAAN,CAAeC,OAAf,CAAuBJ,YAAY,CAACC,MAApC,CADG,EAENR,MAAM,CAACY,eAAP,EAFM,eAGN;AAEE,0BAAkBJ,MAAM,CAACK,GAAP,CAAWC,IAAX,CAAgB,GAAhB,CAFpB,CAGE;AAHF;AAIE,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAEP,MAAM,CAACQ;AAAjB;AAJ3B,OACM,mBADN;AAAA;AAAA;AAAA;AAAA,YAHM;AAHV;AAcD,CAjDD","sourcesContent":["import React from \"react\";\r\nimport Document, { Html, Head, Main, NextScript } from \"next/document\";\r\nimport { ServerStyleSheets } from \"@material-ui/core/styles\";\r\nimport createEmotionServer from \"@emotion/server/create-instance\";\r\nimport theme from \"../components/theme\";\r\nimport { cache } from \"./_app.js\";\r\n\r\nconst { extractCritical } = createEmotionServer(cache);\r\n\r\nexport default class MyDocument extends Document {\r\n  render() {\r\n    return (\r\n      <Html lang=\"en\">\r\n        <Head>\r\n          {/* PWA primary color */}\r\n          <meta name=\"theme-color\" content={theme.palette.primary.main} />\r\n          <link\r\n            rel=\"stylesheet\"\r\n            href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\r\n          />\r\n        </Head>\r\n        <body>\r\n          <Main />\r\n          <NextScript />\r\n        </body>\r\n      </Html>\r\n    );\r\n  }\r\n}\r\n\r\n// `getInitialProps` belongs to `_document` (instead of `_app`),\r\n// it's compatible with static-site generation (SSG).\r\nMyDocument.getInitialProps = async (ctx) => {\r\n  // Resolution order\r\n  //\r\n  // On the server:\r\n  // 1. app.getInitialProps\r\n  // 2. page.getInitialProps\r\n  // 3. document.getInitialProps\r\n  // 4. app.render\r\n  // 5. page.render\r\n  // 6. document.render\r\n  //\r\n  // On the server with error:\r\n  // 1. document.getInitialProps\r\n  // 2. app.render\r\n  // 3. page.render\r\n  // 4. document.render\r\n  //\r\n  // On the client\r\n  // 1. app.getInitialProps\r\n  // 2. page.getInitialProps\r\n  // 3. app.render\r\n  // 4. page.render\r\n\r\n  // Render app and page and get the context of the page with collected side effects.\r\n  const sheets = new ServerStyleSheets();\r\n  const originalRenderPage = ctx.renderPage;\r\n\r\n  ctx.renderPage = () =>\r\n    originalRenderPage({\r\n      enhanceApp: (App) => (props) => sheets.collect(<App {...props} />),\r\n    });\r\n\r\n  const initialProps = await Document.getInitialProps(ctx);\r\n  const styles = extractCritical(initialProps.html);\r\n\r\n  return {\r\n    ...initialProps,\r\n    // Styles fragment is rendered after the app and page rendering finish.\r\n    styles: [\r\n      ...React.Children.toArray(initialProps.styles),\r\n      sheets.getStyleElement(),\r\n      <style\r\n        key=\"emotion-style-tag\"\r\n        data-emotion-css={styles.ids.join(\" \")}\r\n        // eslint-disable-next-line react/no-danger\r\n        dangerouslySetInnerHTML={{ __html: styles.css }}\r\n      />,\r\n    ],\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}